---
openapi: 3.0.1
components:
  securitySchemes:
    basic_auth:
      type: http
      scheme: basic
    api_key:
      type: apiKey
      name: api_key
      in: query
paths:
  "/posts":
    post:
      summary: Retrieves a list of all posts for a user
      tags:
      - Posts
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    title:
                      type: string
                    text:
                      type: string
                    author:
                      type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                        photo:
                          type: string
                          nullable: true
                        bio:
                          type: string
                          nullable: true
                      required:
                      - id
                      - name
                    comments:
                      type: array
                      items:
                        type: object
                        properties:
                          id:
                            type: integer
                          text:
                            type: string
                          author_id:
                            type: integer
                          post_id:
                            type: integer
                        required:
                        - id
                        - text
                        - author_id
                        - post_id
                  required:
                  - id
                  - title
                  - text
                  - author
                  - comments
  "/comments":
    post:
      summary: Creates a new comment
      tags:
      - Comments
      parameters: []
      responses:
        '201':
          description: Created
        '422':
          description: invalid request
        '400':
          description: Bad Request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                author_id:
                  type: integer
                post_id:
                  type: integer
                text:
                  type: string
              required:
              - author_id
              - post_id
              - text
  "/posts/{post_id}/comments":
    get:
      summary: Retrieves comments for a post
      tags:
      - Comments
      parameters:
      - name: post_id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: Comments retrieved
        '404':
          description: Post not found
